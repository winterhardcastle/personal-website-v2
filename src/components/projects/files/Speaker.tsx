/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 -t scene.gltf
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Box: THREE.Mesh
    Logo: THREE.Mesh
    Vent_Tube: THREE.Mesh
    ['Front_Panel_(1)']: THREE.Mesh
    Terminal: THREE.Mesh
    Box_Top: THREE.Mesh
    Handle: THREE.Mesh
  }
  materials: {
    ['ABS (White) (1)']: THREE.MeshStandardMaterial
    ['Steel - Satin']: THREE.MeshStandardMaterial
    ['Aluminum nitride (AlN)']: THREE.MeshStandardMaterial
    ['3D Mahogany - Unfinished']: THREE.MeshStandardMaterial
    ['ABS (White)']: THREE.MeshStandardMaterial
    ['Titanium - Polished']: THREE.MeshStandardMaterial
  }
}

export function Speaker(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('./gltfs/scene.gltf') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group position={[-1, -2, 0]} rotation={[-1.2, .1, .5]} scale={0.02}>
        <mesh geometry={nodes.Box.geometry} material={materials['ABS (White) (1)']} scale={10} />
        <mesh geometry={nodes.Logo.geometry} material={materials['Steel - Satin']} scale={10} />
        <mesh geometry={nodes.Vent_Tube.geometry} material={materials['Aluminum nitride (AlN)']} scale={10} />
        <mesh geometry={nodes['Front_Panel_(1)'].geometry} material={materials['3D Mahogany - Unfinished']} scale={10} />
        <mesh geometry={nodes.Terminal.geometry} material={materials['ABS (White)']} scale={10} />
        <mesh geometry={nodes.Box_Top.geometry} material={materials['ABS (White) (1)']} scale={10} />
        <mesh geometry={nodes.Handle.geometry} material={materials['Titanium - Polished']} scale={10} />
      </group>
      <pointLight intensity={1} decay={2} color="#fcfcfc" position={[10,10,10]} />
    </group>
  )
}

useGLTF.preload('./gltfs/scene.gltf')
