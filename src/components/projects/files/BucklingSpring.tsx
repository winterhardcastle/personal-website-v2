/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 -t buckling_spring.gltf
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, OrbitControls } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Adapter: THREE.Mesh
  }
  materials: {
    ['Plastic - Translucent Matte (White)']: THREE.MeshStandardMaterial
  }
}

export function BucklingSpring(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('./gltfs/buckling_spring.gltf') as GLTFResult
  return (
    <>
    <group {...props} dispose={null}>
      <group scale={.5}>
        <mesh geometry={nodes.Adapter.geometry} material={materials['Plastic - Translucent Matte (White)']} position={[0,-2,0]} rotation={[-1.13, 0, -.4]} scale={3} />
      </group>
      <pointLight intensity={1} decay={2} color="#fcfcfc" position={[-12.44, 12.49, 15.73]} />
    </group>
    </>
  )
}

useGLTF.preload('./gltfs/buckling_spring.gltf')
