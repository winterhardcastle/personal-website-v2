/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 -t slavboard.gltf
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Body1_4: THREE.Mesh
    Body1_5: THREE.Mesh
    Body1_6: THREE.Mesh
    Body2_3: THREE.Mesh
    Body2_4: THREE.Mesh
    Body2_5: THREE.Mesh
    Body3_1: THREE.Mesh
    Body4_2: THREE.Mesh
    Body4_3: THREE.Mesh
    Body5_2: THREE.Mesh
    Body5_3: THREE.Mesh
  }
  materials: {}
}

export function Slavboard(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('./gltfs/slavboard.gltf') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group position={[0,0,0]} rotation={[-0.44, 0.3, .75 ]} scale={0.02}>
        <mesh geometry={nodes.Body1_4.geometry} material={nodes.Body1_4.material} />
        <mesh geometry={nodes.Body1_5.geometry} material={nodes.Body1_5.material} />
        <mesh geometry={nodes.Body1_6.geometry} material={nodes.Body1_6.material} />
        <mesh geometry={nodes.Body2_3.geometry} material={nodes.Body2_3.material} />
        <mesh geometry={nodes.Body2_4.geometry} material={nodes.Body2_4.material} />
        <mesh geometry={nodes.Body2_5.geometry} material={nodes.Body2_5.material} />
        <mesh geometry={nodes.Body3_1.geometry} material={nodes.Body3_1.material} />
        <mesh geometry={nodes.Body4_2.geometry} material={nodes.Body4_2.material} />
        <mesh geometry={nodes.Body4_3.geometry} material={nodes.Body4_3.material} />
        <mesh geometry={nodes.Body5_2.geometry} material={nodes.Body5_2.material} />
        <mesh geometry={nodes.Body5_3.geometry} material={nodes.Body5_3.material} />
      </group>
      <pointLight intensity={1} decay={2} color="#fcfcfc" position={[-12.44, 12.49, 15.73]} />
    </group>
  )
}

useGLTF.preload('./gltfs/slavboard.gltf')
